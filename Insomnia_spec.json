{"_type":"export","__export_format":4,"__export_date":"2022-12-03T22:17:08.356Z","__export_source":"insomnia.desktop.app:v2022.6.0","resources":[{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937afa08f19c","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a212e1d38","modified":1670105809772,"created":1670105675015,"url":"{{ base_url }}/fence/inclusive","name":"set all inclusive polygonal fences","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  [\n    {\n      \"id\": 0,\n      \"name\": \"string\",\n      \"longitude\": 0,\n      \"latitude\": 0,\n      \"altitude\": 0\n    }\n  ]\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1670105675015,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937a212e1d38","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1670105675040,"created":1670105675040,"name":"fence","description":"Inclusion/Exclusion fences","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1670105675040,"_type":"request_group"},{"_id":"wrk_3451a02250d44f6183ae20ef64eb937a","parentId":null,"modified":1666475576656,"created":1666475576656,"name":"New Document","description":"","scope":"design","_type":"workspace"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937ac5787850","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a212e1d38","modified":1670105797320,"created":1670105675009,"url":"{{ base_url }}/fence/exclusive","name":"set all exclusive polygonal fences","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  [\n    {\n      \"id\": 0,\n      \"name\": \"string\",\n      \"longitude\": 0,\n      \"latitude\": 0,\n      \"altitude\": 0\n    }\n  ]\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1670105675009,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937adbc90529","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937ab9561877","modified":1669503475355,"created":1669503475355,"url":"{{ base_url }}/rtl","name":"return to launch","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1669503475355,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937ab9561877","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1669503475371,"created":1669503475371,"name":"landing","description":"Landing, RTL, and setting Home","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1669503475371,"_type":"request_group"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937a3d3b60b2","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937ab9561877","modified":1669503475353,"created":1669503475353,"url":"{{ base_url }}/land","name":"immediately descend and land","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1669503475353,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937ad13a4a3d","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937ab9561877","modified":1670105811213,"created":1669503475351,"url":"{{ base_url }}/home","name":"set the home waypoint of the drone","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"name\": \"Alpha\",\n  \"latitude\": -35.3627798,\n  \"longitude\": 149.1651830,\n  \"altitude\": 583\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1669503475351,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811","modified":1667685342286,"created":1667685342286,"url":"{{ base_url }}/unlock","name":"Resume aircraft movement based on the queue","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1667685342286,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1667685319932,"created":1667685319932,"name":"unlock","description":"Toggle queue-based movement","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1667685319932,"_type":"request_group"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937a7233965c","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a7233965c","modified":1670105771542,"created":1667685319924,"url":"{{ base_url }}/takeoff","name":"Lift off to a given altitude","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n  \"altitude\": 603\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1667685319924,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937a7233965c","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1667685319931,"created":1667685319931,"name":"takeoff","description":"Take off after motors are armed","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1667685319931,"_type":"request_group"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937ae1177974","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937ae1177974","modified":1666479702432,"created":1666479702432,"url":"{{ base_url }}/lock","name":"Prevent the aircraft from moving based on the queue","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666479702432,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937ae1177974","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666479702436,"created":1666479702436,"name":"lock","description":"Toggle queue-based movement","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666479702436,"_type":"request_group"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937afa067ad9","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a1038345e","modified":1666479938642,"created":1666479702435,"url":"{{ base_url }}/queue","name":"Returns the current list of waypoints in the queue","description":"","method":"GET","body":{"mimeType":"multipart/form-data","params":[]},"parameters":[],"headers":[{"name":"Content-Type","value":"multipart/form-data"}],"authentication":{},"metaSortKey":-1666479702435,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937a1038345e","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666476452506,"created":1666476452506,"name":"queue","description":"Access to aicraft waypoint queue","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666476452506,"_type":"request_group"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937a861a9504","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a1038345e","modified":1670105750132,"created":1666479702434,"url":"{{ base_url }}/queue","name":"Overwrite the queue with a new list of waypoints","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  {\n\t\t\"id\": 0,\n    \"name\": \"Alpha\",\n    \"latitude\": -35.3627798,\n    \"longitude\": 149.1651830,\n    \"altitude\": 603\n  },\n\t{\n\t\t\"id\": 1,\n\t  \"name\": \"Bravo\",\n    \"latitude\": -35.3637798,\n    \"longitude\": 149.1651830,\n    \"altitude\": null\n\t},\n\t{\n\t\t\"id\": 2,\n\t  \"name\": \"Charlie\",\n    \"latitude\": -35.3637798,\n    \"longitude\": 149.1641830,\n    \"altitude\": 593\n\t}\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_ffbb96161a9c453cb5c760c7eabbb643"}],"authentication":{},"metaSortKey":-1666479702434,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_3451a02250d44f6183ae20ef64eb937a48a3661d","parentId":"fld_wrk_3451a02250d44f6183ae20ef64eb937a48a3661d","modified":1666479702433,"created":1666479702433,"url":"{{ base_url }}/status","name":"Obtain the aircraft status","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666479702433,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_3451a02250d44f6183ae20ef64eb937a48a3661d","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666476452505,"created":1666476452505,"name":"status","description":"Current aircraft status","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666476452505,"_type":"request_group"},{"_id":"env_6584cd92e09eeaaf89879bef05694fd1f6853848","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666475576682,"created":1666475576682,"name":"Base Environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1666475576682,"_type":"environment"},{"_id":"jar_6584cd92e09eeaaf89879bef05694fd1f6853848","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666475576686,"created":1666475576686,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_bbb2ecae23f147d78f2daad66a71ced5","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1670105814125,"created":1666475576674,"fileName":"MissionPlanner Scripts","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is the API that the MissionPlanner Scripts server exposes to GCOM.\"\n  version: 1.1.0\n  title: MissionPlanner Scripts\ntags:\n  - name: queue\n    description: Access to aircraft waypoint queue\n  - name: status\n    description: Current aircraft status\n  - name: lock\n    description: Toggle queue-based movement\n  - name: unlock\n    description: Toggle queue-based movement\n  - name: takeoff\n    description: Take off after motors are armed\n  - name: landing\n    description: Landing, RTL, and setting Home\n  - name: fence\n    description: Inclusion/Exclusion fences\npaths:\n  /queue:\n    get:\n      tags:\n        - queue\n      summary: Returns the current list of waypoints in the queue\n      description: \"\"\n      operationId: getQueue\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Waypoint\"\n    post: \n      tags:\n        - queue\n      summary: Overwrite the queue with a new list of waypoints \n      description: Altitude can be null\n      operationId: updateQueue\n      requestBody:\n        $ref: \"#/components/requestBodies/Queue\"\n      responses:\n        \"200\":\n          description: successful operation\n        \"400\":\n          description: bad request\n  /status:\n    get:\n      tags:\n        - status\n      summary: Obtain the aircraft status\n      description: \"\"\n      operationId: status\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n  /lock:\n    get:\n      tags:\n        - lock\n      summary: Prevent the aircraft from moving based on the queue\n      description: \"\"\n      operationId: lock\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Aircraft already locked or queue empty\n  /unlock:\n    get:\n      tags:\n        - unlock\n      summary: Resume aircraft movement based on the queue\n      description: \"\"\n      operationId: unlock\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Aircraft already unlocked\n  /takeoff:\n    post:\n      tags:\n        - takeoff\n      summary: Lift off to a given altitude\n      description: \"\"\n      operationId: takeoff\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                altitude:\n                  type: number\n                  format: float64\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Takeoff unsuccessful or motors disarmed\n  /rtl:\n    get:\n      tags:\n        - landing\n      summary: return to launch\n      description: \"\"\n      operationId: rtl\n      responses:\n        \"200\":\n          description: Successful, drone has initiated RTL procedure\n        \"400\":\n          description: Initiating RTL unsuccessful\n  /land:\n    get:\n      tags:\n        - landing\n      summary: immediately descend and land\n      description: \"\"\n      operationId: land\n      responses:\n        \"200\":\n          description: Successful, drone has started landing procedure\n        \"400\":\n          description: Initiating landing unsuccessful\n  /home:\n    post:\n      tags:\n        - landing\n      summary: set the home waypoint of the drone\n      description: \"\"\n      operationId: sethome\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Waypoint\"\n      responses:\n        \"200\":\n          description: Successfully set new home position\n        \"400\":\n          description: Home position could not be set\n  /fence/inclusive:\n    post:\n      tags:\n        - fence\n      summary: set inclusive polygonal fences\n      description: \"\"\n      operationId: fenceinclusive\n      requestBody:\n       $ref: \"#/components/requestBodies/FenceList\"\n      responses:\n        \"200\":\n          description: Successfully set new fence\n        \"400\":\n          description: Fence parameters were invalid\n  /fence/exclusive:\n    post:\n      tags:\n        - fence\n      summary: set exclusive polygonal fences\n      description: \"\"\n      operationId: fenceexclusive\n      requestBody:\n       $ref: \"#/components/requestBodies/FenceList\"\n      responses:\n        \"200\":\n          description: Successfully set new fence\n        \"400\":\n          description: Fence parameters were invalid\ncomponents:\n  requestBodies:\n    Queue:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Queue\"\n      description: Queue of waypoints\n      required: true\n    FenceList:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Fence\"\n      description: Collection of waypoints defining a fence\n      required: true\n  schemas:\n    Fence:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Waypoint\"\n    Queue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Waypoint\"\n    Waypoint:\n      type: object\n      properties:\n        id:\n          type: number\n          format: integer\n        name:\n          type: string\n        longitude:\n          type: number\n          format: float64\n        latitude:\n          type: number\n          format: float64\n        altitude:\n          type: number\n          format: float64\n      xml:\n        name: Queue\n    Status:\n      type: object\n      properties:\n        velocity:\n          type: number\n          format: float64\n        longitude:\n          type: number\n          format: float64\n        latitude:\n          type: number\n          format: float64\n        altitude:\n          type: number\n          format: float64\n        heading:\n          type: number\n          format: float64\n        batteryvoltage:\n          type: number\n          format: float64\n      xml:\n        name: Status","contentType":"yaml","_type":"api_spec"},{"_id":"uts_f8f846f0f366428c8be8f71c20bac058","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1666475576692,"created":1666475576692,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"uts_ddb036905fdb4556829c125ff893ea8a","parentId":"wrk_3451a02250d44f6183ae20ef64eb937a","modified":1667078545422,"created":1667078545422,"name":"Basic Testing","_type":"unit_test_suite"},{"_id":"env_env_6584cd92e09eeaaf89879bef05694fd1f6853848_sub","parentId":"env_6584cd92e09eeaaf89879bef05694fd1f6853848","modified":1666479865015,"created":1666475963861,"name":"OpenAPI env","data":{"scheme":"https","base_path":"/v2","host":"petstore.swagger.io"},"dataPropertyOrder":{"&":["scheme","base_path","host"]},"color":null,"isPrivate":false,"metaSortKey":1666475963861,"_type":"environment"},{"_id":"env_8ab8a6935833443b9b65bb9ef3604350","parentId":"env_6584cd92e09eeaaf89879bef05694fd1f6853848","modified":1668897284900,"created":1666479858225,"name":"Local Testing","data":{"scheme":"http","base_path":"","host":"localhost:9000","altitude":20},"dataPropertyOrder":{"&":["scheme","base_path","host","altitude"]},"color":"#7d69cb","isPrivate":true,"metaSortKey":1666479858225,"_type":"environment"},{"_id":"ut_3c7dbd0967624cebb52dea4503a6ac20","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1669504642610,"created":1667079928797,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937a48a3661d","name":"Test-First","code":"//status testing\nconst response1 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937a48a3661d');\nexpect(response1.status).to.equal(200);\n\n//test GET queue\nconst response2 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937afa067ad9');\nexpect(response2.status).to.equal(200);\n//expect the contents to be an empty queue\nconst body = JSON.parse(response2.data);\nexpect(body).to.be.an('array');\nconst item = body[0];\nexpect(item).to.equal(undefined);\n\n//test POST queue\n//sends the queue in debug\nconst response3 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937a861a9504');\nexpect(response3.status).to.equal(200);\n\nfunction resolveAfter100() {\n\treturn new Promise((resolve, reject) => {\n\t  setTimeout(resolve(\"resolved\"), 100);\n  });\n}\n\nconst d = new Date();\n\nasync function timerCall() {\n\tlet ti = d.getTime();\n\tconst result = await resolveAfter100();\n\tconsole.log(\"delay\", d.getTime() - ti);\n}\n\ntimerCall();\n","_type":"unit_test"},{"_id":"ut_eaff979f3a28457bb215bc64127c2818","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1669504645268,"created":1667079951069,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937afa067ad9","name":"GET queue","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);\n//expect the contents to be an empty queue","_type":"unit_test"},{"_id":"ut_10c740e285384a329bbdd1fee8c6e57f","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670640792,"created":1667079973475,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937a861a9504","name":"POST queue","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);","_type":"unit_test"},{"_id":"ut_e5f7a01d299e496cb7e14bf4e5df216b","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670638843,"created":1667080020665,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937afa067ad9","name":"GET queue","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);","_type":"unit_test"},{"_id":"ut_7ae03a0943384cdf815a3f1900800a80","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670628292,"created":1667080038323,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937ae1177974","name":"GET lock 200","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);","_type":"unit_test"},{"_id":"ut_9645ba78fa90443eb50c831ebb967ad6","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670627434,"created":1667080042849,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937ae1177974","name":"GET lock 400","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(400);","_type":"unit_test"},{"_id":"ut_2b80136a0f3a4fe3a4e1f58d50397466","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670623032,"created":1667080048548,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811","name":"GET unlock 200","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(200);","_type":"unit_test"},{"_id":"ut_3592e01475ec440c8e309daa594a61ec","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667670607771,"created":1667080052036,"requestId":"req_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811","name":"GET unlock 400","code":"const response1 = await insomnia.send();\nexpect(response1.status).to.equal(400);","_type":"unit_test"},{"_id":"ut_a1f3706d8497438b8175406ee8116556","parentId":"uts_ddb036905fdb4556829c125ff893ea8a","modified":1667685355827,"created":1667673049410,"requestId":null,"name":"Test-Second","code":"//test GET queue\nconst response4 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937afa067ad9');\nexpect(response4.status).to.equal(200);\nconst body4 = JSON.parse(response4.data);\nexpect(body4).to.be.an('array');\nconsole.log(body4);\nconst item4 = body4[0];\nexpect(item4).to.be.an('object');\nexpect(item4).to.have.property('name');\nexpect(item4).to.have.property('latitude');\nexpect(item4).to.have.property('longitude');\nexpect(item4).to.have.property('altitude');\nexpect(item4.name).to.equal(\"Alpha\");\n\n//test GET lock 200\nconst response5 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937ae1177974');\nexpect(response5.status).to.equal(200);\n\n//test GET lock 400\nconst response6 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937ae1177974');\nexpect(response6.status).to.equal(400);\n\n//test GET unlock 200\nconst response7 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811');\nexpect(response7.status).to.equal(200);\n\n//test GET unlock 400\nconst response8 = await insomnia.send('req_wrk_3451a02250d44f6183ae20ef64eb937a8ec49811');\nexpect(response8.status).to.equal(400);","_type":"unit_test"}]}